#include <iostream>
#include <ctime>
using namespace std;

int main()
{
	setlocale(LC_ALL, "RUS");
	srand(time(NULL));
	int a[10], min, imin;
	for (int i = 0; i < 10; i++) {
		a[i] = rand() % 20;
	}
	for (int i = 0; i < 10; i++) {
		cout << a[i] << " ";
	}
	_asm {
		mov eax, 0 // Инициализируем индекс минимального элемента
		mov ebx, 0 // Инициализируем индекс текущего элемента
		lea ecx, a // Загружаем адрес начала массива в регистр ecx с помощью lea
		mov edx, [ecx] // Загружаем первый элемент массива в регистр edx
		mov esi, 10 // Загружаем размер массива в регистр esi
		mov min, edx // Инициализируем минимальный элемент
		loop_start :
			cmp ebx, esi // Сравниваем текущий индекс с размером массива
			jge loop_end // Если текущий индекс >= размера массива, выходим из цикла
			mov eax, [ecx + ebx * 4] // Загружаем текущий элемент массива в регистр eax
			cmp eax, min // Сравниваем текущий элемент с минимальным
			jge not_min // Если текущий элемент >= минимального, переходим к следующему
			mov min, eax // Обновляем минимальный элемент
			mov imin, ebx // Обновляем индекс минимального элемента
		not_min:
			inc ebx // Увеличиваем текущий индекс
			jmp loop_start // Переходим к следующей итерации цикла
		loop_end :
	}
	cout << endl << "Min: " << min;
	cout << endl << "Index min: " << imin;
}
