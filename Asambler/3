#include <iostream>
using namespace std;

void proizv(int* a, int* b, int* c, int n) {
	_asm {
		mov edi, a
		mov esi, b
		mov ebx, c
		mov edx, n

		m1 :
			mov ecx, n
			push edx

		m2 :
			mov eax, 0
			mov [ebx], eax
			push ecx
			mov ecx, n
		m3 :
			mov eax, [edi]
			mov edx, [esi]
			imul edx
			add [ebx], eax
			add edi, 4
			mov eax, 4
			mov edx, n
			imul edx
			add esi, eax

			loop m3

			add ebx, 4
			mov ecx, n
			mov eax, 4
			imul ecx
			sub edi, eax
			mov eax, 4
			mov edx, n
			imul edx
			imul ecx
			sub esi, eax
			add esi, 4
			pop ecx

			loop m2

			mov eax, 4
			mov edx, n
			imul edx
			add edi, eax
			mov esi, b
			pop edx
			dec edx
			jnz m1
			mov eax, 1
			jmp exit

		exit : 
			mov esp, ebp
			pop ebp
			ret
	}
}

int main()
{
	setlocale(LC_ALL, "RUS");
	/*int n, res = 0;
	cin >> n;
	int a[100], b[100];
	cout << "Введите первый массив: " << endl;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	cout << endl << "Введите второй массив: " << endl;
	for (int i = 0; i < n; i++)
		cin >> b[i];
	_asm {
		mov ecx,[n]
		lea esi, [a]
		lea edi, [b]
		xor edx, edx
		m1:
			mov eax,[esi]
			mov ebx, [edi]
			imul eax, ebx
			add edx, eax
			add esi, 4
			add edi, 4
			loop m1
			mov res, edx
	}
	cout << "Скалярное произведение двух массивов = " <<  res;*/
	int n;
	cin >> n;
	int *a, *b, *c;
	a = (int*)malloc(n * n * sizeof(int));
	b = (int*)malloc(n * n * sizeof(int));
	c = (int*)malloc(n * n * sizeof(int));

	cout << "Первая матрица: " << endl;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			cin >> a[i * n + j];
	cout << "Вторая матрица: " << endl;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			cin >> b[i * n + j];
	/*_asm {
		mov edi, a
		mov esi, b
		mov ebx, c
		mov edx, n

		m1:
			mov ecx, n
			push edx

		m2:
			mov eax, 0
			mov [ebx], eax;
			push ecx
			mov ecx, n
		m3:
			mov eax, [edi]
			mov edx, [esi]
			imul edx
			add [ebx], eax
			add edi, 4
			mov eax, 4
			mov edx, n
				imul edx
				add esi, eax
				loop m3
				add ebx, 4
				mov ecx, n
				mov eax, 4
				imul ecx
				sub edi, eax
				mov eax, 4
				mov edx, n
				imul edx
				imul ecx
				sub edi, eax
				mov eax, 4
				mov edx, n
				imul edx
				imul ecx
				sub esi, eax
				add esi, 4
				pop ecx
				loop m2
				mov eax, 4
				mov edx, n
				imul edx
				add edi, eax
				mov esi, b
				pop edx
				dec edx
				jnz m1
				mov eax,1
				jmp exit
				exit: mov esp, ebp
				pop ebp
				ret
	}*/
	proizv(a, b, c, n);
	cout << "Произведение: " << endl;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++)
			cout << c[i * n + j] << " ";
		cout << endl;
	}

}
