#include <iostream>
#include <vector>
#include <random> //
#include <algorithm>
#include <ctime>
using namespace std;

void G1(int n) {
	srand(time(NULL));
	vector<vector<int>> graph(n, vector<int>(n, 0));
	for (int i = 0; i < n; i++) {
		for (int j = i + 1; j < n; j++) {
			int random = rand() % 2;
			graph[i][j] = random;
			graph[j][i] = random;
		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cout << graph[i][j] << " ";
		}
		cout << endl;
	}
}

void G2(void(*ptr), int n, int f) {
	ptr = &G1;
	vector<int>perenum(n);
	for (int i = 0; i < n; i++) {
		perenum[i] = i;
	}
	random_device rd;
	mt19937 g(rd());
	shuffle(perenum.begin(), perenum.end(), g);
	vector<vector<int>> G2(n, vector<int>(n, 0));
	for (int i = 0; i < n; i++) {
		for (int j = i + 1; j < n; j++) {
			G2[perenum[i]][perenum[j]] = ptr[i][j];
			G2[perenum[j]][perenum[i]] = ptr[j][i];
		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cout << G2[i][j] << " ";
		}
		cout << endl;
	}
}

int main()
{
	int n, f;
	setlocale(LC_ALL, "RUS");
	cout << "Введите кол-во вершин: ";
	cin >> n;
	G1(n);
	cout << "Введите вершины для перенумерации: ";
	cin >> f;
	G2(G1, n, f);

	return 0;
}
